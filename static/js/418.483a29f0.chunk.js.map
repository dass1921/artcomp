{"version":3,"file":"static/js/418.483a29f0.chunk.js","mappings":"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","sources":["components/image-meta.js","components/art-item.js"],"sourcesContent":["import {\r\n  faCircleHalfStroke,\r\n  faDollarSign,\r\n  faExternalLink,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Badge, Spinner } from \"react-bootstrap\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport ReactImageMagnify from \"react-image-magnify\";\r\nimport { MongoContext } from \"../context/mongo-context\";\r\n\r\nfunction ImageMeta(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [art, setArt] = useState({});\r\n  const [dateYear, setDateYear] = useState(\"\");\r\n\r\n  const { user, getImageData, addToImageMap } = useContext(MongoContext);\r\n\r\n  useEffect(() => {\r\n    const a = getImageData(props.sid);\r\n    console.log(a);\r\n    if (!a) {\r\n      setLoading(true);\r\n      user.functions.fetchByID(props.sid).then((resp) => {\r\n        if (resp.result) {\r\n          addToImageMap(props.sid, resp.result[0]);\r\n          setArt(resp.result[0]);\r\n          setDateYear(resp.result[0]?.auction_date?.getFullYear());\r\n\r\n          setLoading(false);\r\n        }\r\n      });\r\n    } else {\r\n      setArt(a);\r\n      setLoading(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  if (loading) {\r\n    return <Spinner variant=\"border\" size=\"sm\"></Spinner>;\r\n  }\r\n\r\n  return art ? (\r\n    <>\r\n      <ReactImageMagnify\r\n        {...{\r\n          smallImage: {\r\n            alt: art.title,\r\n            isFluidWidth: true,\r\n            src: art.image_url,\r\n          },\r\n          largeImage: {\r\n            src: art.image_url,\r\n            width: 1200,\r\n            height: 1800,\r\n          },\r\n        }}\r\n        enlargedImagePosition=\"over\"\r\n      />\r\n      <div className=\"px-1 pb-1\">\r\n        <Figure.Caption title=\"Art Title\">\r\n          {art.title} by <span className=\"fw-bold\">{art.artist_name}</span>\r\n        </Figure.Caption>\r\n\r\n        <Figure.Caption\r\n          title={`Auction Name ${art.auction_name} - ${dateYear}`}\r\n          className=\"font-monospace text-truncate d-none d-md-block\"\r\n        >\r\n          {dateYear}, {art.auction_name}\r\n        </Figure.Caption>\r\n        <Figure.Caption className=\"py-1 d-none d-md-flex\">\r\n          <div\r\n            title=\"Dominant Color\"\r\n            className=\"color-box me-1\"\r\n            style={{ backgroundColor: `#${art.dom_color}` }}\r\n          ></div>\r\n          <span className=\"text-truncate\"> {art.size}</span>\r\n        </Figure.Caption>\r\n        <Figure.Caption className=\"py-1 d-none d-md-flex\">\r\n          <span title=\"Brightness\">\r\n            <FontAwesomeIcon icon={faCircleHalfStroke} className=\"me-2\" />{\" \"}\r\n            {\"  \"}\r\n            {Math.round(art.brightness * 10) / 10}\r\n          </span>\r\n        </Figure.Caption>\r\n\r\n        <Figure.Caption className=\"d-flex justify-content-between\">\r\n          <Badge pill bg=\"success\" title=\"Cost\">\r\n            <FontAwesomeIcon icon={faDollarSign} className=\"me-1\" />\r\n            {Math.round(art.hi_est * 10) / 10} -{\" \"}\r\n            {Math.round(art.lo_est * 10) / 10}\r\n          </Badge>\r\n          <a\r\n            href={art.lot_link}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"small\"\r\n          >\r\n            Lot ID : {art.lot_id}\r\n            <FontAwesomeIcon icon={faExternalLink} className=\"mx-1\" />\r\n          </a>\r\n        </Figure.Caption>\r\n        {art.provenance ? (\r\n          <Figure.Caption className=\"d-flex small p-1\">\r\n            {art.provenance.replace(/provenance:|/gi, \"\")}\r\n          </Figure.Caption>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  ) : null;\r\n}\r\n\r\nexport default ImageMeta;\r\n","import { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { useContext, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { MongoContext } from \"../context/mongo-context\";\r\nimport ImageMeta from \"./image-meta\";\r\n\r\nconst rows = 3;\r\nfunction ArtItem(props) {\r\n  const { user, isAdmin } = useContext(MongoContext);\r\n  console.log(props);\r\n  const [hiddenItems, setHiddenItems] = useState(new Set());\r\n  const onDelete = (n) => {\r\n    const copy = new Set(hiddenItems).add(n);\r\n    setHiddenItems(copy);\r\n    user.functions.deleteSimilarImage(props._id, n).then((resp) => {\r\n      console.log(resp);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row className=\"shadow p-2 my-2 art-item rounded\" data-key={props._id}>\r\n      <Col xs={12} md={4}>\r\n        <Figure className=\"w-100\">\r\n          {/* <ReactImageMagnify\r\n            {...{\r\n              smallImage: {\r\n                alt: props.title,\r\n                isFluidWidth: true,\r\n                src: props.image_url,\r\n              },\r\n              largeImage: {\r\n                src: props.image_url,\r\n                width: 1200,\r\n                height: 1800,\r\n              },\r\n            }}\r\n            enlargedImagePosition=\"over\"\r\n          /> */}\r\n          <ImageMeta sid={props._id} />\r\n        </Figure>\r\n      </Col>\r\n      <Col className=\"p-1\">\r\n        {Array.from(Array(rows).keys()).map((i) => (\r\n          <Row key={i + \"similar-image-row\"}>\r\n            {[1 + i * 3, 2 + i * 3, 3 + i * 3]\r\n              .filter((x) => !!props[`s${x}`] && !hiddenItems.has(x))\r\n              .map((x) => (\r\n                <Col xs={4} key={x + \"similar-image\"}>\r\n                  <Figure className=\"w-100 shadow-sm bg-white p-1\">\r\n                    <Figure.Caption\r\n                      title=\"Percentage Similarity\"\r\n                      className=\"fw-bold d-flex justify-content-between\"\r\n                    >\r\n                      <span>\r\n                        {Math.round(props[`percent_similar_s${x}`] * 100)} %\r\n                        Similar\r\n                      </span>\r\n                      {isAdmin ? (\r\n                        <Button\r\n                          onClick={() => onDelete(x)}\r\n                          variant=\"outline\"\r\n                          className=\"p-0\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            icon={faTrash}\r\n                            size=\"sm\"\r\n                            color=\"grey\"\r\n                          />\r\n                        </Button>\r\n                      ) : null}\r\n                    </Figure.Caption>\r\n\r\n                    <ImageMeta sid={props[`s${x}`]} />\r\n                  </Figure>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ArtItem;\r\n"],"names":["props","useState","loading","setLoading","art","setArt","dateYear","setDateYear","useContext","MongoContext","user","getImageData","addToImageMap","useEffect","a","sid","console","log","functions","fetchByID","then","resp","result","auction_date","getFullYear","Spinner","variant","size","ReactImageMagnify","smallImage","alt","title","isFluidWidth","src","image_url","largeImage","width","height","enlargedImagePosition","className","Figure","artist_name","auction_name","style","backgroundColor","dom_color","icon","faCircleHalfStroke","Math","round","brightness","Badge","pill","bg","faDollarSign","hi_est","lo_est","href","lot_link","target","rel","lot_id","faExternalLink","provenance","replace","isAdmin","Set","hiddenItems","setHiddenItems","Row","_id","Col","xs","md","Array","from","keys","map","i","filter","x","has","Button","onClick","n","copy","add","deleteSimilarImage","onDelete","faTrash","color"],"sourceRoot":""}