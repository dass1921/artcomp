{"version":3,"file":"static/js/418.7c93545c.chunk.js","mappings":"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","sources":["components/image-meta.js","components/art-item.js"],"sourcesContent":["import { faCircleHalfStroke } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport { MongoContext } from \"../context/mongo-context\";\r\n\r\nfunction ImageMeta(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [art, setArt] = useState({});\r\n\r\n  const { user, getImageData, addToImageMap } = useContext(MongoContext);\r\n\r\n  useEffect(() => {\r\n    const a = getImageData(props.sid);\r\n    if (!a) {\r\n      setLoading(true);\r\n      user.functions.fetchByID(props.sid).then((resp) => {\r\n        if (resp.result) {\r\n          addToImageMap(props.sid, resp.result);\r\n          setArt(resp.result);\r\n          setLoading(false);\r\n        }\r\n      });\r\n    } else {\r\n      setArt(a);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return art ? (\r\n    <>\r\n      <Figure.Caption title=\"Art Title\">\r\n        {art.title} by <span className=\"fw-bold\">{art.artist_name}</span>\r\n      </Figure.Caption>\r\n      <Figure.Caption\r\n        title=\"Auction Name\"\r\n        className=\"font-monospace text-truncate d-none d-md-block\"\r\n      >\r\n        {new Date(art.auction_date).getFullYear()}, {art.auction_name}\r\n      </Figure.Caption>\r\n      <Figure.Caption className=\"py-1 d-none d-md-flex\">\r\n        <div\r\n          title=\"Dominant Color\"\r\n          className=\"color-box me-1\"\r\n          style={{ backgroundColor: `#${art.dom_color}` }}\r\n        ></div>{\" \"}\r\n        <span title=\"size\"> {art.size}</span>\r\n      </Figure.Caption>\r\n\r\n      <Figure.Caption title=\"Brightness\">\r\n        <FontAwesomeIcon icon={faCircleHalfStroke} className=\"me-2\" /> {\"  \"}\r\n        {Math.round(art.brightness * 10) / 10}\r\n      </Figure.Caption>\r\n    </>\r\n  ) : null;\r\n}\r\n\r\nexport default ImageMeta;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ReactImageMagnify from \"react-image-magnify\";\r\nimport ImageMeta from \"./image-meta\";\r\n\r\nconst rows = 3;\r\nfunction ArtItem(props) {\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  return (\r\n    <Row className=\"shadow p-2 my-2 art-item rounded\" data-key={props._id}>\r\n      <Col xs={12} md={4}>\r\n        <Figure className=\"w-100\">\r\n          <ReactImageMagnify\r\n            {...{\r\n              smallImage: {\r\n                alt: props.title,\r\n                isFluidWidth: true,\r\n                src: props.image_url,\r\n              },\r\n              largeImage: {\r\n                src: props.image_url,\r\n                width: 1200,\r\n                height: 1800,\r\n              },\r\n            }}\r\n            enlargedImagePosition=\"over\"\r\n          />\r\n          <ImageMeta sid={props._id} />\r\n        </Figure>\r\n      </Col>\r\n      <Col className=\"p-1\">\r\n        {Array.from(Array(rows).keys()).map((i) => (\r\n          <Row>\r\n            {[1 + i * 3, 2 + i * 3, 3 + i * 3]\r\n              .filter((x) => !!props[`s${x}`])\r\n              .map((x) => (\r\n                <Col xs={4} key={x + \"similar-image\"}>\r\n                  <Figure className=\"w-100\">\r\n                    <Figure.Caption\r\n                      title=\"Percentage Similarity\"\r\n                      className=\"fw-bold\"\r\n                    >\r\n                      {Math.round(props[`percent_similar_s${x}`] * 10) / 10} %\r\n                      Similar\r\n                    </Figure.Caption>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: props.title,\r\n                          isFluidWidth: true,\r\n                          src: props[`s${x}_image_uri`],\r\n                        },\r\n                        largeImage: {\r\n                          src: props[`s${x}_image_uri`],\r\n                          width: 1200,\r\n                          height: 1800,\r\n                        },\r\n                      }}\r\n                      enlargedImagePosition=\"over\"\r\n                    />\r\n                    <ImageMeta sid={props[`s${x}`]} />\r\n                  </Figure>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ArtItem;\r\n\r\n{\r\n  /* <Row>\r\n{[1, 2, 3].map((x) => (\r\n  <Col xs={3} key={x + \"similar-image\"}>\r\n    <Figure>\r\n      <Figure.Image\r\n        className=\"img-fluid-h\"\r\n        src={props[`s${x}_image_uri`]}\r\n        alt={props.title}\r\n        loading=\"lazy\"\r\n      />\r\n      <ImageMeta sid={props[`s${x}`]} />\r\n    </Figure>\r\n  </Col>\r\n))}\r\n</Row>\r\n<Row>\r\n{[4, 5].map((x) => (\r\n  <Col xs={3} key={x + \"similar-image\"}>\r\n    <Figure>\r\n      <Figure.Image\r\n        className=\"img-fluid-h\"\r\n        src={props[`s${x}_image_uri`]}\r\n        alt={props.title}\r\n        loading=\"lazy\"\r\n      />\r\n      <ImageMeta sid={props[`s${x}`]} />\r\n    </Figure>\r\n  </Col>\r\n))}\r\n</Row>\r\n<Row>\r\n{[6, 7].map((x) => (\r\n  <Col xs={3} key={x + \"similar-image\"}>\r\n    <Figure>\r\n      <Figure.Image\r\n        className=\"img-fluid-h\"\r\n        src={props[`s${x}_image_uri`]}\r\n        alt={props.title}\r\n        loading=\"lazy\"\r\n      />\r\n      <ImageMeta sid={props[`s${x}`]} />\r\n    </Figure>\r\n  </Col>\r\n))}\r\n</Row> */\r\n}\r\n"],"names":["props","useState","setLoading","art","setArt","useContext","MongoContext","user","getImageData","addToImageMap","useEffect","a","sid","functions","fetchByID","then","resp","result","Figure","title","className","artist_name","Date","auction_date","getFullYear","auction_name","style","backgroundColor","dom_color","size","icon","faCircleHalfStroke","Math","round","brightness","Row","_id","Col","xs","md","ReactImageMagnify","smallImage","alt","isFluidWidth","src","image_url","largeImage","width","height","enlargedImagePosition","Array","from","keys","map","i","filter","x"],"sourceRoot":""}