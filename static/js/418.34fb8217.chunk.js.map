{"version":3,"file":"static/js/418.34fb8217.chunk.js","mappings":"wPA8CA,MAxCA,SAAmBA,GACjB,OAA8BC,EAAAA,EAAAA,WAAS,GAAK,eAA5BC,GAAF,KAAY,MAC1B,GAAsBD,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA3BE,EAAG,KAAEC,EAAM,KAElB,GAA8CC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjDC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAkB5B,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAIH,EAAaR,EAAMY,KACxBD,GAUHP,EAAOO,GACPT,GAAW,KAVXA,GAAW,GACXK,EAAKM,UAAUC,UAAUd,EAAMY,KAAKG,MAAK,SAACC,GACpCA,EAAKC,SACPR,EAAcT,EAAMY,IAAKI,EAAKC,QAC9Bb,EAAOY,EAAKC,QACZf,GAAW,GAEf,IAKJ,GAAG,IACIC,GACL,gCACGA,EAAIe,WACH,SAACC,EAAA,UAAc,WACb,gBACEC,UAAU,YACVC,MAAO,CAAEC,gBAAgB,IAAD,OAAMnB,EAAIe,gBAGpC,MACJ,UAACC,EAAA,UAAc,YACb,SAAC,IAAe,CAACI,KAAMC,EAAAA,IAAoBJ,UAAU,SAAS,IAAE,KAC/DK,KAAKC,MAAuB,GAAjBvB,EAAIwB,YAAmB,SAGrC,IACN,ECeA,MAtDA,SAAiB3B,GAGf,OACE,UAAC4B,EAAA,EAAG,CAACR,UAAU,2BAA2B,WAAUpB,EAAM6B,IAAI,WAC5D,SAACC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAE,UACjB,UAACb,EAAA,EAAM,YACL,SAACA,EAAA,QAAY,CACXC,UAAU,cACVa,MAAO,IACPC,IAAKlC,EAAMmC,UACXC,IAAKpC,EAAMqC,SAEb,SAAClB,EAAA,UAAc,UAAEnB,EAAMqC,SACvB,SAAClB,EAAA,UAAc,UAAEnB,EAAMsC,eACvB,SAACnB,EAAA,UAAc,UAAEnB,EAAMuC,qBAG3B,UAACT,EAAA,EAAG,CAACV,UAAU,MAAK,WAClB,SAACQ,EAAA,EAAG,UACD,CAAC,EAAG,EAAG,EAAG,GAAGY,KAAI,SAACC,GAAC,OAClB,SAACX,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,UAACZ,EAAA,EAAM,YACL,SAACA,EAAA,QAAY,CACXC,UAAU,cACVc,IAAKlC,EAAM,IAAD,OAAKyC,EAAC,eAChBL,IAAKpC,EAAMqC,MACXK,QAAQ,UAEV,SAAC,EAAS,CAAC9B,IAAKZ,EAAM,IAAD,OAAKyC,UARbA,EAAI,gBAUf,OAGV,SAACb,EAAA,EAAG,UACD,CAAC,EAAG,EAAG,GAAGY,KAAI,SAACC,GAAC,OACf,SAACX,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,UAACZ,EAAA,EAAM,YACL,SAACA,EAAA,QAAY,CACXC,UAAU,cACVc,IAAKlC,EAAM,IAAD,OAAKyC,EAAC,eAChBL,IAAKpC,EAAMqC,MACXK,QAAQ,UAEV,SAAC,EAAS,CAAC9B,IAAKZ,EAAM,IAAD,OAAKyC,UARbA,EAAI,gBAUf,WAMlB,C","sources":["components/image-meta.js","components/art-item.js"],"sourcesContent":["import { faCircleHalfStroke } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport { MongoContext } from \"../context/mongo-context\";\r\n\r\nfunction ImageMeta(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [art, setArt] = useState({});\r\n\r\n  const { user, getImageData, addToImageMap } = useContext(MongoContext);\r\n\r\n  useEffect(() => {\r\n    const a = getImageData(props.sid);\r\n    if (!a) {\r\n      setLoading(true);\r\n      user.functions.fetchByID(props.sid).then((resp) => {\r\n        if (resp.result) {\r\n          addToImageMap(props.sid, resp.result);\r\n          setArt(resp.result);\r\n          setLoading(false);\r\n        }\r\n      });\r\n    } else {\r\n      setArt(a);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  return art ? (\r\n    <>\r\n      {art.dom_color ? (\r\n        <Figure.Caption>\r\n          <div\r\n            className=\"color-box\"\r\n            style={{ backgroundColor: `#${art.dom_color}` }}\r\n          ></div>\r\n        </Figure.Caption>\r\n      ) : null}\r\n      <Figure.Caption>\r\n        <FontAwesomeIcon icon={faCircleHalfStroke} className=\"mr-2\" /> {\"  \"}\r\n        {Math.round(art.brightness * 10) / 10}\r\n      </Figure.Caption>\r\n    </>\r\n  ) : null;\r\n}\r\n\r\nexport default ImageMeta;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ImageMeta from \"./image-meta\";\r\n\r\nfunction ArtItem(props) {\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  return (\r\n    <Row className=\"shadow p-3 my-2 art-item\" data-key={props._id}>\r\n      <Col xs={12} md={4}>\r\n        <Figure>\r\n          <Figure.Image\r\n            className=\"img-fluid-h\"\r\n            width={400}\r\n            src={props.image_url}\r\n            alt={props.title}\r\n          />\r\n          <Figure.Caption>{props.title}</Figure.Caption>\r\n          <Figure.Caption>{props.artist_name}</Figure.Caption>\r\n          <Figure.Caption>{props.auction_name}</Figure.Caption>\r\n        </Figure>\r\n      </Col>\r\n      <Col className=\"p-1\">\r\n        <Row>\r\n          {[1, 2, 3, 4].map((x) => (\r\n            <Col xs={3} key={x + \"similar-image\"}>\r\n              <Figure>\r\n                <Figure.Image\r\n                  className=\"img-fluid-h\"\r\n                  src={props[`s${x}_image_uri`]}\r\n                  alt={props.title}\r\n                  loading=\"lazy\"\r\n                />\r\n                <ImageMeta sid={props[`s${x}`]} />\r\n              </Figure>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row>\r\n          {[5, 6, 7].map((x) => (\r\n            <Col xs={3} key={x + \"similar-image\"}>\r\n              <Figure>\r\n                <Figure.Image\r\n                  className=\"img-fluid-h\"\r\n                  src={props[`s${x}_image_uri`]}\r\n                  alt={props.title}\r\n                  loading=\"lazy\"\r\n                />\r\n                <ImageMeta sid={props[`s${x}`]} />\r\n              </Figure>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ArtItem;\r\n"],"names":["props","useState","setLoading","art","setArt","useContext","MongoContext","user","getImageData","addToImageMap","useEffect","a","sid","functions","fetchByID","then","resp","result","dom_color","Figure","className","style","backgroundColor","icon","faCircleHalfStroke","Math","round","brightness","Row","_id","Col","xs","md","width","src","image_url","alt","title","artist_name","auction_name","map","x","loading"],"sourceRoot":""}